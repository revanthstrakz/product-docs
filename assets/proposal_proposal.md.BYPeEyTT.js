import{_ as e,c as o,o as t,V as a}from"./chunks/framework.byVSwcP3.js";const f=JSON.parse('{"title":"Proposed Approach","description":"","frontmatter":{"date":"2024-02-12T00:00:00.000Z","category":"document","author":"Rich Thanki","order":3,"title":"Proposed Approach"},"headers":[],"relativePath":"proposal/proposal.md","filePath":"proposal/proposal.md"}'),r={name:"proposal/proposal.md"},n=a('<h1 id="a-proposed-future-system" tabindex="-1">A Proposed Future System <a class="header-anchor" href="#a-proposed-future-system" aria-label="Permalink to &quot;A Proposed Future System&quot;">​</a></h1><blockquote><p>&quot;It&#39;s like I always say, &#39;Can&#39;t win, don&#39;t try.&#39;&quot; - Homer J. Simpson</p></blockquote><p>Given our current limitations, Jangala needs a better solution to support our evolving requirements. We propose a system that uses Markdown for document creation and GitHub for document hosting, version control, and collaboration. This system is designed to address the challenges identified above, improving our documentation&#39;s accessibility, versatility, and overall quality.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>Markdown is a lightweight markup language, a way of of quickly writing structured text that&#39;s not locked to a specific format like Word or Google Docs. GitHub is a platform that provudes powerful version control and collaboration features. The combination of the two offers a workflow for creating, managing, and sharing documentation that is not only more efficient but also scalable as our projects grow in complexity and scope.</p><h2 id="non-technical-description" tabindex="-1">Non-technical Description <a class="header-anchor" href="#non-technical-description" aria-label="Permalink to &quot;Non-technical Description&quot;">​</a></h2><p>If you&#39;re not familiar with Markdown and GitHub, think of this proposed system as a more flexible and collaborative version of Google Docs. Instead of being constrained to a single document format or struggling with version histories, imagine a workspace where:</p><ul><li><strong>Documents are easily editable by anyone, anywhere</strong>, without worrying about having the latest version.</li><li><strong>Changes are tracked transparently</strong>, with the ability to see who made what changes and why, leading to easier reviews and ensuring documentation accuracy.</li><li><strong>Multiple versions of a document can be managed effortlessly</strong>, allowing us to maintain various iterations of our documentation for different product versions or deployment scenarios.</li><li><strong>Our documents are adaptable</strong>, meaning we can quickly transform them into whatever format best suits the task at hand, from online manuals to embedded help systems within our products.</li></ul><p>This transition to Markdown and GitHub would represent a significant shift in how we create, share, and maintain our project documentation. However, this doesn&#39;t need to be frightening!</p>',9),i=[n];function s(l,c,d,u,p,h){return t(),o("div",null,i)}const g=e(r,[["render",s]]);export{f as __pageData,g as default};
